using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;

using System.Text.RegularExpressions;

using NeuroSky.ThinkGear;
using NeuroSky.ThinkGear.Parser;

using NeuroSky.ThinkGear.Algorithms;

namespace NeuroSky.MindView {
    public partial class Launcher : Form {
        
        private Connector connector;

        MainForm mainForm;
        Device device;

        private TGHrv tgHRV;                //the RR interval detection algorithm
        
        private int tgHRVresult;            //output of the TGHrv algorithm
        private int tgHRVresultInMS;     //output of the TGHrv algorithm in MSec

        private byte[] bytesToSend;     //bytes to send for EGO
        private int rawCounter;         //counter for delay of EGO output
        private int delay;              //delay for lead on/lead off

        private int bufferSize_hp = 1614;       //length of the low pass filter
        //high pass filter 0.5 to 2 Hz, equiripple
        //private double[] hp_coeff = new double[1621] { -2.07243e-006, -2.07155e-006, -2.0698e-006, -2.06718e-006, -2.06368e-006, -2.05932e-006, -2.05408e-006, -2.04798e-006, -2.04102e-006, -2.0332e-006, -2.02452e-006, -2.015e-006, -2.00463e-006, -1.99342e-006, -1.98138e-006, -1.96851e-006, -1.95483e-006, -1.94033e-006, -1.92503e-006, -1.90893e-006, -1.89205e-006, -1.87439e-006, -1.85596e-006, -1.83678e-006, -1.81684e-006, -1.79617e-006, -1.77478e-006, -1.75267e-006, -1.72986e-006, -1.70636e-006, -1.68218e-006, -1.65734e-006, -1.63185e-006, -1.60573e-006, -1.57899e-006, -1.55164e-006, -1.5237e-006, -1.49519e-006, -1.46611e-006, -1.4365e-006, -1.40636e-006, -1.3757e-006, -1.34456e-006, -1.31294e-006, -1.28087e-006, -1.24836e-006, -1.21543e-006, -1.18209e-006, -1.14838e-006, -1.1143e-006, -1.07989e-006, -1.04515e-006, -1.0101e-006, -9.74783e-007, -9.39201e-007, -9.03381e-007, -8.67343e-007, -8.31111e-007, -7.94705e-007, -7.58148e-007, -7.21463e-007, -6.84673e-007, -6.47801e-007, -6.10869e-007, -5.73903e-007, -5.36925e-007, -4.99959e-007, -4.63031e-007, -4.26164e-007, -3.89384e-007, -3.52715e-007, -3.16183e-007, -2.79813e-007, -2.43632e-007, -2.07664e-007, -1.71937e-007, -1.36476e-007, -1.01309e-007, -6.64626e-008, -3.19633e-008, 2.16114e-009, 3.58832e-008, 6.9175e-008, 1.02008e-007, 1.34355e-007, 1.66187e-007, 1.97475e-007, 2.2819e-007, 2.58303e-007, 2.87784e-007, 3.16604e-007, 3.44733e-007, 3.7214e-007, 3.98796e-007, 4.24669e-007, 4.49728e-007, 4.73942e-007, 4.97281e-007, 5.19711e-007, 5.41201e-007, 5.6172e-007, 5.81233e-007, 5.99709e-007, 6.17114e-007, 6.33415e-007, 6.48578e-007, 6.6257e-007, 6.75356e-007, 6.86901e-007, 6.97172e-007, 7.06131e-007, 7.13745e-007, 7.19977e-007, 7.24791e-007, 7.28152e-007, 7.30021e-007, 7.30362e-007, 7.29138e-007, 7.26311e-007, 7.21843e-007, 7.15696e-007, 7.0783e-007, 6.98207e-007, 6.86788e-007, 6.73532e-007, 6.58399e-007, 6.4135e-007, 6.22343e-007, 6.01337e-007, 5.7829e-007, 5.53161e-007, 5.25908e-007, 4.96487e-007, 4.64857e-007, 4.30973e-007, 3.94792e-007, 3.56271e-007, 3.15364e-007, 2.72028e-007, 2.26217e-007, 1.77885e-007, 1.26989e-007, 7.348e-008, 1.73135e-008, -4.15574e-008, -1.0318e-007, -1.67601e-007, -2.34868e-007, -3.05029e-007, -3.78131e-007, -4.54224e-007, -5.33356e-007, -6.15574e-007, -7.0093e-007, -7.8947e-007, -8.81246e-007, -9.76307e-007, -1.0747e-006, -1.17648e-006, -1.28169e-006, -1.39039e-006, -1.50262e-006, -1.61844e-006, -1.73789e-006, -1.86103e-006, -1.98791e-006, -2.11857e-006, -2.25306e-006, -2.39145e-006, -2.53377e-006, -2.68008e-006, -2.83043e-006, -2.98487e-006, -3.14344e-006, -3.3062e-006, -3.47319e-006, -3.64447e-006, -3.82008e-006, -4.00007e-006, -4.18449e-006, -4.37339e-006, -4.5668e-006, -4.76479e-006, -4.96739e-006, -5.17465e-006, -5.38662e-006, -5.60333e-006, -5.82483e-006, -6.05117e-006, -6.28238e-006, -6.5185e-006, -6.75958e-006, -7.00565e-006, -7.25675e-006, -7.51292e-006, -7.7742e-006, -8.04061e-006, -8.31218e-006, -8.58897e-006, -8.87098e-006, -9.15825e-006, -9.45081e-006, -9.74869e-006, -1.00519e-005, -1.03605e-005, -1.06744e-005, -1.09938e-005, -1.13186e-005, -1.16488e-005, -1.19844e-005, -1.23256e-005, -1.26722e-005, -1.30242e-005, -1.33818e-005, -1.37448e-005, -1.41133e-005, -1.44873e-005, -1.48668e-005, -1.52517e-005, -1.56422e-005, -1.6038e-005, -1.64393e-005, -1.6846e-005, -1.72581e-005, -1.76756e-005, -1.80984e-005, -1.85265e-005, -1.89599e-005, -1.93986e-005, -1.98424e-005, -2.02914e-005, -2.07455e-005, -2.12047e-005, -2.16689e-005, -2.2138e-005, -2.2612e-005, -2.30908e-005, -2.35744e-005, -2.40626e-005, -2.45555e-005, -2.50529e-005, -2.55546e-005, -2.60608e-005, -2.65711e-005, -2.70856e-005, -2.76042e-005, -2.81267e-005, -2.8653e-005, -2.9183e-005, -2.97165e-005, -3.02535e-005, -3.07939e-005, -3.13374e-005, -3.18839e-005, -3.24333e-005, -3.29855e-005, -3.35402e-005, -3.40973e-005, -3.46567e-005, -3.52181e-005, -3.57815e-005, -3.63465e-005, -3.69131e-005, -3.74809e-005, -3.80499e-005, -3.86198e-005, -3.91904e-005, -3.97614e-005, -4.03327e-005, -4.0904e-005, -4.14751e-005, -4.20458e-005, -4.26157e-005, -4.31847e-005, -4.37525e-005, -4.43187e-005, -4.48833e-005, -4.54457e-005, -4.60059e-005, -4.65635e-005, -4.71181e-005, -4.76696e-005, -4.82175e-005, -4.87616e-005, -4.93016e-005, -4.98371e-005, -5.03677e-005, -5.08933e-005, -5.14133e-005, -5.19276e-005, -5.24356e-005, -5.29371e-005, -5.34317e-005, -5.3919e-005, -5.43986e-005, -5.48702e-005, -5.53333e-005, -5.57876e-005, -5.62327e-005, -5.66681e-005, -5.70935e-005, -5.75084e-005, -5.79125e-005, -5.83052e-005, -5.86861e-005, -5.90549e-005, -5.9411e-005, -5.97541e-005, -6.00836e-005, -6.03992e-005, -6.07003e-005, -6.09865e-005, -6.12573e-005, -6.15123e-005, -6.17509e-005, -6.19727e-005, -6.21773e-005, -6.2364e-005, -6.25324e-005, -6.26821e-005, -6.28125e-005, -6.29231e-005, -6.30135e-005, -6.3083e-005, -6.31312e-005, -6.31577e-005, -6.31617e-005, -6.3143e-005, -6.31008e-005, -6.30348e-005, -6.29443e-005, -6.28289e-005, -6.26881e-005, -6.25212e-005, -6.23278e-005, -6.21074e-005, -6.18593e-005, -6.15832e-005, -6.12785e-005, -6.09445e-005, -6.05809e-005, -6.01871e-005, -5.97625e-005, -5.93067e-005, -5.8819e-005, -5.82991e-005, -5.77463e-005, -5.71602e-005, -5.65402e-005, -5.58858e-005, -5.51966e-005, -5.44719e-005, -5.37114e-005, -5.29145e-005, -5.20807e-005, -5.12095e-005, -5.03005e-005, -4.93532e-005, -4.8367e-005, -4.73416e-005, -4.62764e-005, -4.51711e-005, -4.40251e-005, -4.2838e-005, -4.16094e-005, -4.03388e-005, -3.90259e-005, -3.76702e-005, -3.62713e-005, -3.48288e-005, -3.33424e-005, -3.18116e-005, -3.02361e-005, -2.86156e-005, -2.69496e-005, -2.52379e-005, -2.34801e-005, -2.16759e-005, -1.9825e-005, -1.79271e-005, -1.5982e-005, -1.39894e-005, -1.19489e-005, -9.86048e-006, -7.72379e-006, -5.53864e-006, -3.30484e-006, -1.02221e-006, 1.30943e-006, 3.69022e-006, 6.1203e-006, 8.5998e-006, 1.11288e-005, 1.37074e-005, 1.63357e-005, 1.90138e-005, 2.17416e-005, 2.45192e-005, 2.73465e-005, 3.02237e-005, 3.31506e-005, 3.61271e-005, 3.91533e-005, 4.2229e-005, 4.5354e-005, 4.85284e-005, 5.17518e-005, 5.50241e-005, 5.83452e-005, 6.17148e-005, 6.51327e-005, 6.85986e-005, 7.21121e-005, 7.56732e-005, 7.92812e-005, 8.29361e-005, 8.66372e-005, 9.03844e-005, 9.4177e-005, 9.80148e-005, 0.000101897, 0.000105824, 0.000109794, 0.000113807, 0.000117862, 0.00012196, 0.000126098, 0.000130278, 0.000134497, 0.000138755, 0.000143052, 0.000147387, 0.000151759, 0.000156167, 0.00016061, 0.000165088, 0.000169599, 0.000174143, 0.000178719, 0.000183325, 0.000187961, 0.000192626, 0.000197319, 0.000202039, 0.000206783, 0.000211553, 0.000216345, 0.00022116, 0.000225995, 0.00023085, 0.000235723, 0.000240613, 0.000245519, 0.00025044, 0.000255373, 0.000260317, 0.000265272, 0.000270236, 0.000275206, 0.000280182, 0.000285162, 0.000290145, 0.000295129, 0.000300112, 0.000305092, 0.000310068, 0.000315039, 0.000320002, 0.000324956, 0.000329898, 0.000334828, 0.000339743, 0.000344642, 0.000349522, 0.000354381, 0.000359219, 0.000364032, 0.000368819, 0.000373577, 0.000378306, 0.000383002, 0.000387663, 0.000392288, 0.000396875, 0.00040142, 0.000405923, 0.00041038, 0.000414791, 0.000419151, 0.00042346, 0.000427715, 0.000431914, 0.000436054, 0.000440133, 0.000444149, 0.000448099, 0.000451981, 0.000455793, 0.000459533, 0.000463197, 0.000466783, 0.00047029, 0.000473714, 0.000477053, 0.000480305, 0.000483467, 0.000486537, 0.000489511, 0.000492389, 0.000495167, 0.000497842, 0.000500412, 0.000502875, 0.000505228, 0.000507468, 0.000509593, 0.0005116, 0.000513488, 0.000515252, 0.000516891, 0.000518402, 0.000519782, 0.00052103, 0.000522142, 0.000523115, 0.000523948, 0.000524637, 0.000525181, 0.000525576, 0.00052582, 0.000525911, 0.000525845, 0.000525621, 0.000525236, 0.000524687, 0.000523973, 0.000523089, 0.000522035, 0.000520807, 0.000519403, 0.000517821, 0.000516059, 0.000514113, 0.000511981, 0.000509662, 0.000507153, 0.000504451, 0.000501554, 0.00049846, 0.000495167, 0.000491672, 0.000487973, 0.000484068, 0.000479956, 0.000475633, 0.000471097, 0.000466348, 0.000461381, 0.000456197, 0.000450791, 0.000445164, 0.000439312, 0.000433234, 0.000426927, 0.000420391, 0.000413623, 0.000406622, 0.000399386, 0.000391912, 0.000384201, 0.000376249, 0.000368056, 0.000359619, 0.000350939, 0.000342012, 0.000332837, 0.000323415, 0.000313742, 0.000303817, 0.000293641, 0.000283211, 0.000272526, 0.000261585, 0.000250388, 0.000238933, 0.000227219, 0.000215246, 0.000203013, 0.000190518, 0.000177762, 0.000164744, 0.000151462, 0.000137917, 0.000124109, 0.000110035, 9.56973e-005, 8.10942e-005, 6.62259e-005, 5.1092e-005, 3.56926e-005, 2.00274e-005, 4.09651e-006, -1.21e-005, -2.85622e-005, -4.52897e-005, -6.22824e-005, -7.95399e-005, -9.7062e-005, -0.000114848, -0.000132898, -0.000151211, -0.000169786, -0.000188624, -0.000207722, -0.00022708, -0.000246698, -0.000266575, -0.000286709, -0.000307099, -0.000327745, -0.000348645, -0.000369797, -0.000391202, -0.000412856, -0.000434759, -0.00045691, -0.000479306, -0.000501946, -0.000524828, -0.00054795, -0.000571312, -0.000594909, -0.000618742, -0.000642807, -0.000667103, -0.000691627, -0.000716378, -0.000741352, -0.000766548, -0.000791962, -0.000817593, -0.000843438, -0.000869495, -0.00089576, -0.00092223, -0.000948904, -0.000975778, -0.00100285, -0.00103011, -0.00105757, -0.00108521, -0.00111304, -0.00114105, -0.00116924, -0.00119761, -0.00122614, -0.00125484, -0.00128371, -0.00131274, -0.00134192, -0.00137126, -0.00140075, -0.00143038, -0.00146016, -0.00149007, -0.00152012, -0.00155029, -0.0015806, -0.00161102, -0.00164156, -0.00167221, -0.00170298, -0.00173385, -0.00176481, -0.00179588, -0.00182703, -0.00185827, -0.0018896, -0.001921, -0.00195247, -0.00198402, -0.00201562, -0.00204729, -0.002079, -0.00211077, -0.00214258, -0.00217443, -0.00220632, -0.00223823, -0.00227017, -0.00230213, -0.0023341, -0.00236608, -0.00239807, -0.00243005, -0.00246203, -0.002494, -0.00252595, -0.00255788, -0.00258978, -0.00262165, -0.00265348, -0.00268527, -0.00271701, -0.0027487, -0.00278033, -0.00281189, -0.00284338, -0.0028748, -0.00290614, -0.00293739, -0.00296856, -0.00299962, -0.00303059, -0.00306144, -0.00309219, -0.00312281, -0.00315332, -0.00318369, -0.00321393, -0.00324403, -0.00327399, -0.00330379, -0.00333344, -0.00336293, -0.00339226, -0.00342141, -0.00345038, -0.00347918, -0.00350778, -0.0035362, -0.00356442, -0.00359243, -0.00362024, -0.00364783, -0.00367521, -0.00370236, -0.00372928, -0.00375598, -0.00378243, -0.00380864, -0.0038346, -0.00386031, -0.00388577, -0.00391096, -0.00393588, -0.00396054, -0.00398491, -0.00400901, -0.00403282, -0.00405634, -0.00407956, -0.00410249, -0.00412511, -0.00414743, -0.00416943, -0.00419112, -0.00421249, -0.00423354, -0.00425425, -0.00427463, -0.00429468, -0.00431439, -0.00433375, -0.00435277, -0.00437143, -0.00438974, -0.00440769, -0.00442528, -0.0044425, -0.00445936, -0.00447584, -0.00449195, -0.00450768, -0.00452303, -0.00453799, -0.00455256, -0.00456675, -0.00458054, -0.00459394, -0.00460694, -0.00461953, -0.00463173, -0.00464351, -0.00465489, -0.00466586, -0.00467642, -0.00468656, -0.00469629, -0.00470559, -0.00471448, -0.00472294, -0.00473098, -0.0047386, -0.00474578, -0.00475254, -0.00475887, -0.00476477, -0.00477024, -0.00477527, -0.00477987, -0.00478403, -0.00478776, -0.00479105, -0.0047939, -0.00479632, -0.00479829, -0.00479983, -0.00480093, -0.00480159, 0.995198, -0.00480159, -0.00480093, -0.00479983, -0.00479829, -0.00479632, -0.0047939, -0.00479105, -0.00478776, -0.00478403, -0.00477987, -0.00477527, -0.00477024, -0.00476477, -0.00475887, -0.00475254, -0.00474578, -0.0047386, -0.00473098, -0.00472294, -0.00471448, -0.00470559, -0.00469629, -0.00468656, -0.00467642, -0.00466586, -0.00465489, -0.00464351, -0.00463173, -0.00461953, -0.00460694, -0.00459394, -0.00458054, -0.00456675, -0.00455256, -0.00453799, -0.00452303, -0.00450768, -0.00449195, -0.00447584, -0.00445936, -0.0044425, -0.00442528, -0.00440769, -0.00438974, -0.00437143, -0.00435277, -0.00433375, -0.00431439, -0.00429468, -0.00427463, -0.00425425, -0.00423354, -0.00421249, -0.00419112, -0.00416943, -0.00414743, -0.00412511, -0.00410249, -0.00407956, -0.00405634, -0.00403282, -0.00400901, -0.00398491, -0.00396054, -0.00393588, -0.00391096, -0.00388577, -0.00386031, -0.0038346, -0.00380864, -0.00378243, -0.00375598, -0.00372928, -0.00370236, -0.00367521, -0.00364783, -0.00362024, -0.00359243, -0.00356442, -0.0035362, -0.00350778, -0.00347918, -0.00345038, -0.00342141, -0.00339226, -0.00336293, -0.00333344, -0.00330379, -0.00327399, -0.00324403, -0.00321393, -0.00318369, -0.00315332, -0.00312281, -0.00309219, -0.00306144, -0.00303059, -0.00299962, -0.00296856, -0.00293739, -0.00290614, -0.0028748, -0.00284338, -0.00281189, -0.00278033, -0.0027487, -0.00271701, -0.00268527, -0.00265348, -0.00262165, -0.00258978, -0.00255788, -0.00252595, -0.002494, -0.00246203, -0.00243005, -0.00239807, -0.00236608, -0.0023341, -0.00230213, -0.00227017, -0.00223823, -0.00220632, -0.00217443, -0.00214258, -0.00211077, -0.002079, -0.00204729, -0.00201562, -0.00198402, -0.00195247, -0.001921, -0.0018896, -0.00185827, -0.00182703, -0.00179588, -0.00176481, -0.00173385, -0.00170298, -0.00167221, -0.00164156, -0.00161102, -0.0015806, -0.00155029, -0.00152012, -0.00149007, -0.00146016, -0.00143038, -0.00140075, -0.00137126, -0.00134192, -0.00131274, -0.00128371, -0.00125484, -0.00122614, -0.00119761, -0.00116924, -0.00114105, -0.00111304, -0.00108521, -0.00105757, -0.00103011, -0.00100285, -0.000975778, -0.000948904, -0.00092223, -0.00089576, -0.000869495, -0.000843438, -0.000817593, -0.000791962, -0.000766548, -0.000741352, -0.000716378, -0.000691627, -0.000667103, -0.000642807, -0.000618742, -0.000594909, -0.000571312, -0.00054795, -0.000524828, -0.000501946, -0.000479306, -0.00045691, -0.000434759, -0.000412856, -0.000391202, -0.000369797, -0.000348645, -0.000327745, -0.000307099, -0.000286709, -0.000266575, -0.000246698, -0.00022708, -0.000207722, -0.000188624, -0.000169786, -0.000151211, -0.000132898, -0.000114848, -9.7062e-005, -7.95399e-005, -6.22824e-005, -4.52897e-005, -2.85622e-005, -1.21e-005, 4.09651e-006, 2.00274e-005, 3.56926e-005, 5.1092e-005, 6.62259e-005, 8.10942e-005, 9.56973e-005, 0.000110035, 0.000124109, 0.000137917, 0.000151462, 0.000164744, 0.000177762, 0.000190518, 0.000203013, 0.000215246, 0.000227219, 0.000238933, 0.000250388, 0.000261585, 0.000272526, 0.000283211, 0.000293641, 0.000303817, 0.000313742, 0.000323415, 0.000332837, 0.000342012, 0.000350939, 0.000359619, 0.000368056, 0.000376249, 0.000384201, 0.000391912, 0.000399386, 0.000406622, 0.000413623, 0.000420391, 0.000426927, 0.000433234, 0.000439312, 0.000445164, 0.000450791, 0.000456197, 0.000461381, 0.000466348, 0.000471097, 0.000475633, 0.000479956, 0.000484068, 0.000487973, 0.000491672, 0.000495167, 0.00049846, 0.000501554, 0.000504451, 0.000507153, 0.000509662, 0.000511981, 0.000514113, 0.000516059, 0.000517821, 0.000519403, 0.000520807, 0.000522035, 0.000523089, 0.000523973, 0.000524687, 0.000525236, 0.000525621, 0.000525845, 0.000525911, 0.00052582, 0.000525576, 0.000525181, 0.000524637, 0.000523948, 0.000523115, 0.000522142, 0.00052103, 0.000519782, 0.000518402, 0.000516891, 0.000515252, 0.000513488, 0.0005116, 0.000509593, 0.000507468, 0.000505228, 0.000502875, 0.000500412, 0.000497842, 0.000495167, 0.000492389, 0.000489511, 0.000486537, 0.000483467, 0.000480305, 0.000477053, 0.000473714, 0.00047029, 0.000466783, 0.000463197, 0.000459533, 0.000455793, 0.000451981, 0.000448099, 0.000444149, 0.000440133, 0.000436054, 0.000431914, 0.000427715, 0.00042346, 0.000419151, 0.000414791, 0.00041038, 0.000405923, 0.00040142, 0.000396875, 0.000392288, 0.000387663, 0.000383002, 0.000378306, 0.000373577, 0.000368819, 0.000364032, 0.000359219, 0.000354381, 0.000349522, 0.000344642, 0.000339743, 0.000334828, 0.000329898, 0.000324956, 0.000320002, 0.000315039, 0.000310068, 0.000305092, 0.000300112, 0.000295129, 0.000290145, 0.000285162, 0.000280182, 0.000275206, 0.000270236, 0.000265272, 0.000260317, 0.000255373, 0.00025044, 0.000245519, 0.000240613, 0.000235723, 0.00023085, 0.000225995, 0.00022116, 0.000216345, 0.000211553, 0.000206783, 0.000202039, 0.000197319, 0.000192626, 0.000187961, 0.000183325, 0.000178719, 0.000174143, 0.000169599, 0.000165088, 0.00016061, 0.000156167, 0.000151759, 0.000147387, 0.000143052, 0.000138755, 0.000134497, 0.000130278, 0.000126098, 0.00012196, 0.000117862, 0.000113807, 0.000109794, 0.000105824, 0.000101897, 9.80148e-005, 9.4177e-005, 9.03844e-005, 8.66372e-005, 8.29361e-005, 7.92812e-005, 7.56732e-005, 7.21121e-005, 6.85986e-005, 6.51327e-005, 6.17148e-005, 5.83452e-005, 5.50241e-005, 5.17518e-005, 4.85284e-005, 4.5354e-005, 4.2229e-005, 3.91533e-005, 3.61271e-005, 3.31506e-005, 3.02237e-005, 2.73465e-005, 2.45192e-005, 2.17416e-005, 1.90138e-005, 1.63357e-005, 1.37074e-005, 1.11288e-005, 8.5998e-006, 6.1203e-006, 3.69022e-006, 1.30943e-006, -1.02221e-006, -3.30484e-006, -5.53864e-006, -7.72379e-006, -9.86048e-006, -1.19489e-005, -1.39894e-005, -1.5982e-005, -1.79271e-005, -1.9825e-005, -2.16759e-005, -2.34801e-005, -2.52379e-005, -2.69496e-005, -2.86156e-005, -3.02361e-005, -3.18116e-005, -3.33424e-005, -3.48288e-005, -3.62713e-005, -3.76702e-005, -3.90259e-005, -4.03388e-005, -4.16094e-005, -4.2838e-005, -4.40251e-005, -4.51711e-005, -4.62764e-005, -4.73416e-005, -4.8367e-005, -4.93532e-005, -5.03005e-005, -5.12095e-005, -5.20807e-005, -5.29145e-005, -5.37114e-005, -5.44719e-005, -5.51966e-005, -5.58858e-005, -5.65402e-005, -5.71602e-005, -5.77463e-005, -5.82991e-005, -5.8819e-005, -5.93067e-005, -5.97625e-005, -6.01871e-005, -6.05809e-005, -6.09445e-005, -6.12785e-005, -6.15832e-005, -6.18593e-005, -6.21074e-005, -6.23278e-005, -6.25212e-005, -6.26881e-005, -6.28289e-005, -6.29443e-005, -6.30348e-005, -6.31008e-005, -6.3143e-005, -6.31617e-005, -6.31577e-005, -6.31312e-005, -6.3083e-005, -6.30135e-005, -6.29231e-005, -6.28125e-005, -6.26821e-005, -6.25324e-005, -6.2364e-005, -6.21773e-005, -6.19727e-005, -6.17509e-005, -6.15123e-005, -6.12573e-005, -6.09865e-005, -6.07003e-005, -6.03992e-005, -6.00836e-005, -5.97541e-005, -5.9411e-005, -5.90549e-005, -5.86861e-005, -5.83052e-005, -5.79125e-005, -5.75084e-005, -5.70935e-005, -5.66681e-005, -5.62327e-005, -5.57876e-005, -5.53333e-005, -5.48702e-005, -5.43986e-005, -5.3919e-005, -5.34317e-005, -5.29371e-005, -5.24356e-005, -5.19276e-005, -5.14133e-005, -5.08933e-005, -5.03677e-005, -4.98371e-005, -4.93016e-005, -4.87616e-005, -4.82175e-005, -4.76696e-005, -4.71181e-005, -4.65635e-005, -4.60059e-005, -4.54457e-005, -4.48833e-005, -4.43187e-005, -4.37525e-005, -4.31847e-005, -4.26157e-005, -4.20458e-005, -4.14751e-005, -4.0904e-005, -4.03327e-005, -3.97614e-005, -3.91904e-005, -3.86198e-005, -3.80499e-005, -3.74809e-005, -3.69131e-005, -3.63465e-005, -3.57815e-005, -3.52181e-005, -3.46567e-005, -3.40973e-005, -3.35402e-005, -3.29855e-005, -3.24333e-005, -3.18839e-005, -3.13374e-005, -3.07939e-005, -3.02535e-005, -2.97165e-005, -2.9183e-005, -2.8653e-005, -2.81267e-005, -2.76042e-005, -2.70856e-005, -2.65711e-005, -2.60608e-005, -2.55546e-005, -2.50529e-005, -2.45555e-005, -2.40626e-005, -2.35744e-005, -2.30908e-005, -2.2612e-005, -2.2138e-005, -2.16689e-005, -2.12047e-005, -2.07455e-005, -2.02914e-005, -1.98424e-005, -1.93986e-005, -1.89599e-005, -1.85265e-005, -1.80984e-005, -1.76756e-005, -1.72581e-005, -1.6846e-005, -1.64393e-005, -1.6038e-005, -1.56422e-005, -1.52517e-005, -1.48668e-005, -1.44873e-005, -1.41133e-005, -1.37448e-005, -1.33818e-005, -1.30242e-005, -1.26722e-005, -1.23256e-005, -1.19844e-005, -1.16488e-005, -1.13186e-005, -1.09938e-005, -1.06744e-005, -1.03605e-005, -1.00519e-005, -9.74869e-006, -9.45081e-006, -9.15825e-006, -8.87098e-006, -8.58897e-006, -8.31218e-006, -8.04061e-006, -7.7742e-006, -7.51292e-006, -7.25675e-006, -7.00565e-006, -6.75958e-006, -6.5185e-006, -6.28238e-006, -6.05117e-006, -5.82483e-006, -5.60333e-006, -5.38662e-006, -5.17465e-006, -4.96739e-006, -4.76479e-006, -4.5668e-006, -4.37339e-006, -4.18449e-006, -4.00007e-006, -3.82008e-006, -3.64447e-006, -3.47319e-006, -3.3062e-006, -3.14344e-006, -2.98487e-006, -2.83043e-006, -2.68008e-006, -2.53377e-006, -2.39145e-006, -2.25306e-006, -2.11857e-006, -1.98791e-006, -1.86103e-006, -1.73789e-006, -1.61844e-006, -1.50262e-006, -1.39039e-006, -1.28169e-006, -1.17648e-006, -1.0747e-006, -9.76307e-007, -8.81246e-007, -7.8947e-007, -7.0093e-007, -6.15574e-007, -5.33356e-007, -4.54224e-007, -3.78131e-007, -3.05029e-007, -2.34868e-007, -1.67601e-007, -1.0318e-007, -4.15574e-008, 1.73135e-008, 7.348e-008, 1.26989e-007, 1.77885e-007, 2.26217e-007, 2.72028e-007, 3.15364e-007, 3.56271e-007, 3.94792e-007, 4.30973e-007, 4.64857e-007, 4.96487e-007, 5.25908e-007, 5.53161e-007, 5.7829e-007, 6.01337e-007, 6.22343e-007, 6.4135e-007, 6.58399e-007, 6.73532e-007, 6.86788e-007, 6.98207e-007, 7.0783e-007, 7.15696e-007, 7.21843e-007, 7.26311e-007, 7.29138e-007, 7.30362e-007, 7.30021e-007, 7.28152e-007, 7.24791e-007, 7.19977e-007, 7.13745e-007, 7.06131e-007, 6.97172e-007, 6.86901e-007, 6.75356e-007, 6.6257e-007, 6.48578e-007, 6.33415e-007, 6.17114e-007, 5.99709e-007, 5.81233e-007, 5.6172e-007, 5.41201e-007, 5.19711e-007, 4.97281e-007, 4.73942e-007, 4.49728e-007, 4.24669e-007, 3.98796e-007, 3.7214e-007, 3.44733e-007, 3.16604e-007, 2.87784e-007, 2.58303e-007, 2.2819e-007, 1.97475e-007, 1.66187e-007, 1.34355e-007, 1.02008e-007, 6.9175e-008, 3.58832e-008, 2.16114e-009, -3.19633e-008, -6.64626e-008, -1.01309e-007, -1.36476e-007, -1.71937e-007, -2.07664e-007, -2.43632e-007, -2.79813e-007, -3.16183e-007, -3.52715e-007, -3.89384e-007, -4.26164e-007, -4.63031e-007, -4.99959e-007, -5.36925e-007, -5.73903e-007, -6.10869e-007, -6.47801e-007, -6.84673e-007, -7.21463e-007, -7.58148e-007, -7.94705e-007, -8.31111e-007, -8.67343e-007, -9.03381e-007, -9.39201e-007, -9.74783e-007, -1.0101e-006, -1.04515e-006, -1.07989e-006, -1.1143e-006, -1.14838e-006, -1.18209e-006, -1.21543e-006, -1.24836e-006, -1.28087e-006, -1.31294e-006, -1.34456e-006, -1.3757e-006, -1.40636e-006, -1.4365e-006, -1.46611e-006, -1.49519e-006, -1.5237e-006, -1.55164e-006, -1.57899e-006, -1.60573e-006, -1.63185e-006, -1.65734e-006, -1.68218e-006, -1.70636e-006, -1.72986e-006, -1.75267e-006, -1.77478e-006, -1.79617e-006, -1.81684e-006, -1.83678e-006, -1.85596e-006, -1.87439e-006, -1.89205e-006, -1.90893e-006, -1.92503e-006, -1.94033e-006, -1.95483e-006, -1.96851e-006, -1.98138e-006, -1.99342e-006, -2.00463e-006, -2.015e-006, -2.02452e-006, -2.0332e-006, -2.04102e-006, -2.04798e-006, -2.05408e-006, -2.05932e-006, -2.06368e-006, -2.06718e-006, -2.0698e-006, -2.07155e-006, -2.07243e-006 };

        //bandpass filter, 0.5 to 2Hz, 35 to 36.5Hz, equiripple
        private double[] hp_coeff = new double[1614] { 1.14188e-006, 9.91977e-006, 9.70961e-006, 1.39599e-005, 1.74808e-005, 2.03605e-005, 2.19722e-005, 2.18475e-005, 1.96412e-005, 1.52313e-005, 8.74823e-006, 6.05115e-007, -8.54376e-006, -1.78524e-005, -2.63995e-005, -3.32933e-005, -3.78129e-005, -3.94992e-005, -3.82459e-005, -3.43111e-005, -2.83084e-005, -2.11126e-005, -1.3753e-005, -7.24789e-006, -2.46927e-006, 2.02733e-009, -5.3163e-008, -2.44412e-006, -6.61851e-006, -1.17392e-005, -1.68421e-005, -2.09809e-005, -2.33991e-005, -2.36397e-005, -2.16414e-005, -1.7733e-005, -1.25895e-005, -7.09398e-006, -2.2016e-006, 1.2436e-006, 2.64747e-006, 1.79321e-006, -1.13924e-006, -5.58725e-006, -1.07136e-005, -1.55398e-005, -1.91487e-005, -2.08285e-005, -2.02172e-005, -1.73684e-005, -1.27624e-005, -7.19505e-006, -1.66692e-006, 2.81844e-006, 5.43558e-006, 5.6938e-006, 3.52274e-006, -6.74246e-007, -6.13413e-006, -1.18172e-005, -1.66396e-005, -1.96448e-005, -2.01973e-005, -1.81088e-005, -1.36758e-005, -7.64475e-006, -1.07223e-006, 4.85831e-006, 9.05891e-006, 1.07425e-005, 9.57672e-006, 5.7594e-006, -1.0838e-008, -6.64781e-006, -1.28783e-005, -1.74698e-005, -1.94714e-005, -1.83896e-005, -1.43005e-005, -7.84149e-006, -1.14641e-007, 7.51938e-006, 1.36818e-005, 1.72422e-005, 1.7528e-005, 1.44731e-005, 8.6351e-006, 1.11452e-006, -6.64762e-006, -1.31219e-005, -1.69876e-005, -1.73759e-005, -1.40532e-005, -7.4721e-006, 1.28564e-006, 1.07099e-005, 1.91249e-005, 2.50086e-005, 2.72755e-005, 2.55019e-005, 2.0009e-005, 1.18337e-005, 2.54065e-006, -6.05197e-006, -1.22158e-005, -1.46308e-005, -1.26565e-005, -6.45513e-006, 3.00708e-006, 1.41304e-005, 2.49626e-005, 3.35635e-005, 3.83633e-005, 3.84782e-005, 3.38794e-005, 2.54347e-005, 1.47523e-005, 3.90543e-006, -4.95352e-006, -9.99363e-006, -1.00595e-005, -4.90528e-006, 4.73717e-006, 1.72752e-005, 3.05309e-005, 4.21438e-005, 5.00052e-005, 5.26694e-005, 4.96323e-005, 4.14591e-005, 2.96921e-005, 1.65924e-005, 4.71979e-006, -3.53278e-006, -6.40492e-006, -3.10594e-006, 6.00458e-006, 1.94678e-005, 3.49652e-005, 4.97467e-005, 6.11308e-005, 6.70202e-005, 6.63021e-005, 5.909e-005, 4.67198e-005, 3.15347e-005, 1.64567e-005, 4.45612e-006, -2.01663e-006, -1.49557e-006, 6.19224e-006, 1.98742e-005, 3.72159e-005, 5.51442e-005, 7.04019e-005, 8.01683e-005, 8.2592e-005, 7.717e-005, 6.48642e-005, 4.79588e-005, 2.96503e-005, 1.34716e-005, 2.62296e-006, -6.30323e-007, 4.58573e-006, 1.75659e-005, 3.61189e-005, 5.69559e-005, 7.62808e-005, 9.05049e-005, 9.69198e-005, 9.42374e-005, 8.28529e-005, 6.48145e-005, 4.3464e-005, 2.28379e-005, 6.91467e-006, -1.13363e-006, 4.37806e-007, 1.15928e-005, 3.04769e-005, 5.37393e-005, 7.71245e-005, 9.62685e-005, 0.00010751, 0.000108609, 9.91849e-005, 8.08395e-005, 5.68836e-005, 3.17552e-005, 1.01948e-005, -3.63602e-006, -6.96111e-006, 1.06608e-006, 1.91559e-005, 4.40907e-005, 7.12873e-005, 9.56435e-005, 0.000112484, 0.000118461, 0.000112203, 9.46248e-005, 6.87878e-005, 3.9373e-005, 1.182e-005, -8.67905e-006, -1.8173e-005, -1.47159e-005, 1.21949e-006, 2.67911e-005, 5.72712e-005, 8.6912e-005, 0.000110005, 0.000121966, 0.00012022, 0.00010473, 7.80474e-005, 4.4885e-005, 1.12598e-005, -1.66124e-005, -3.34952e-005, -3.61344e-005, -2.39159e-005, 9.73824e-007, 3.39027e-005, 6.86295e-005, 9.84468e-005, 0.000117448, 0.000121652, 0.000109798, 8.36288e-005, 4.76207e-005, 8.1849e-006, -2.75062e-005, -5.2866e-005, -6.31438e-005, -5.63641e-005, -3.3743e-005, 4.75576e-007, 3.97756e-005, 7.65514e-005, 0.000103535, 0.000115169, 0.000108693, 8.47155e-005, 4.71589e-005, 2.57493e-006, -4.10422e-005, -7.57477e-005, -9.51446e-005, -9.56258e-005, -7.7101e-005, -4.30813e-005, -7.32446e-008, 4.35935e-005, 7.93145e-005, 9.98289e-005, 0.000100621, 8.08164e-005, 4.34192e-005, -5.19679e-006, -5.64281e-005, -0.000101036, -0.000130876, -0.000140465, -0.000128059, -9.60497e-005, -5.05813e-005, -4.5623e-007, 4.44893e-005, 7.52231e-005, 8.52448e-005, 7.18534e-005, 3.67285e-005, -1.43183e-005, -7.23673e-005, -0.00012703, -0.000168386, -0.000188869, -0.000184736, -0.000156846, -0.000110562, -5.48263e-005, -5.16373e-007, 4.15721e-005, 6.27754e-005, 5.82319e-005, 2.78686e-005, -2.35087e-005, -8.70401e-005, -0.000151425, -0.000205015, -0.000238017, -0.00024437, -0.00022296, -0.000177905, -0.000117865, -5.44776e-005, -2.02569e-007, 3.40224e-005, 4.08731e-005, 1.80877e-005, -3.10277e-005, -9.81303e-005, -0.000171342, -0.000237434, -0.000284316, -0.000303332, -0.000290963, -0.000249565, -0.000187025, -0.000115352, -4.847e-005, 3.84367e-007, 2.11779e-005, 9.03285e-006, -3.4773e-005, -0.000102946, -0.000183465, -0.000261781, -0.000323529, -0.000357248, -0.000356598, -0.000321638, -0.000258912, -0.000180315, -0.000100923, -3.61902e-005, 9.69588e-007, 2.66794e-006, -3.23911e-005, -9.85592e-005, -0.00018421, -0.000273844, -0.000350962, -0.000401173, -0.000414949, -0.0003895, -0.000329409, -0.000245872, -0.000154683, -7.33132e-005, -1.76307e-005, 1.12795e-006, -2.14481e-005, -8.20023e-005, -0.000169932, -0.000269284, -0.000361692, -0.000429816, -0.000460642, -0.000448004, -0.000393857, -0.000308027, -0.000206467, -0.000108331, -3.23965e-005, 6.49801e-006, 3.14683e-007, -5.05569e-005, -0.000137252, -0.000243982, -0.000350918, -0.000437887, -0.000488183, -0.000491778, -0.00044732, -0.000362512, -0.000252792, -0.000138515, -4.11835e-005, 2.06143e-005, 3.476e-005, -2.00397e-006, -8.33331e-005, -0.000194338, -0.000314283, -0.000420421, -0.000492273, -0.000515536, -0.000484876, -0.000405069, -0.00029024, -0.000161325, -4.22068e-005, 4.47671e-005, 8.30299e-005, 6.50194e-005, -6.26755e-006, -0.000117687, -0.000248296, -0.000373201, -0.000468217, -0.000514452, -0.000501958, -0.000431742, -0.000315725, -0.000174646, -3.42554e-005, 7.94852e-005, 0.000145314, 0.000150761, 9.46269e-005, -1.26253e-005, -0.000150695, -0.000293143, -0.000412314, -0.00048455, -0.000494727, -0.000439235, -0.000326819, -0.000177099, -1.70044e-005, 0.000124221, 0.000220521, 0.000254004, 0.000218438, 0.0001206, -2.08409e-005, -0.000178681, -0.000322222, -0.00042303, -0.000460348, -0.000425132, -0.000321922, -0.000168166, 8.89802e-006, 0.000177274, 0.00030619, 0.000371946, 0.000362489, 0.000279859, 0.000139988, -3.01209e-005, -0.000197361, -0.000328699, -0.000397436, -0.00038834, -0.000300689, -0.000148601, 4.14363e-005, 0.000235414, 0.000398134, 0.00049986, 0.000522013, 0.000460843, 0.000328333, 0.000150146, -3.90546e-005, -0.000202042, -0.00030604, -0.000328986, -0.000263853, -0.000120177, 7.75236e-005, 0.000294191, 0.00049072, 0.000631311, 0.000690282, 0.000657073, 0.000538437, 0.000357396, 0.000149098, -4.56758e-005, -0.000188159, -0.000248961, -0.000213757, -8.61971e-005, 0.000112541, 0.000347537, 0.000576547, 0.000757911, 0.000858439, 0.000859809, 0.000762228, 0.000584639, 0.000361376, 0.000135874, -4.74403e-005, -0.000151542, -0.000153917, -5.10093e-005, 0.000140848, 0.00038827, 0.000646913, 0.000869724, 0.00101581, 0.00105827, 0.000989438, 0.000822634, 0.000589873, 0.000336072, 0.000110706, -4.14968e-005, -8.9082e-005, -2.00001e-005, 0.000155858, 0.000408249, 0.000692034, 0.000955528, 0.0011502, 0.0012399, 0.00120786, 0.00106012, 0.000824699, 0.000546539, 0.000279254, 7.50725e-005, -2.50615e-005, 6.10989e-007, 0.000150293, 0.000398668, 0.00070138, 0.00100319, 0.00124828, 0.00139082, 0.00140377, 0.00128426, 0.0010544, 0.000757485, 0.000450011, 0.000191193, 3.17723e-005, 4.30244e-006, 0.000116746, 0.00035065, 0.00066429, 0.00100027, 0.00129618, 0.00149635, 0.00156247, 0.00148108, 0.00126642, 0.000958118, 0.000614013, 0.000299429, 7.4917e-005, -1.52766e-005, 4.81987e-005, 0.00025581, 0.000570564, 0.000934656, 0.00128014, 0.00154165, 0.00166882, 0.00163602, 0.00144752, 0.00113708, 0.000761941, 0.000392294, 9.81658e-005, -6.38453e-005, -6.1467e-005, 0.00010682, 0.000411086, 0.000795207, 0.00118714, 0.00151237, 0.00170795, 0.00173462, 0.00158452, 0.0012831, 0.000884737, 0.000462848, 9.62077e-005, -0.00014588, -0.000216838, -0.000101932, 0.000178509, 0.000572476, 0.00100571, 0.00139545, 0.00166602, 0.00176322, 0.00166492, 0.00138561, 0.000974243, 0.000505335, 6.52581e-005, -0.000263979, -0.00042032, -0.000373677, -0.00013207, 0.000259388, 0.000726518, 0.00117974, 0.00153082, 0.0017096, 0.00167754, 0.00143542, 0.00102379, 0.000515746, 3.62071e-006, -0.000418298, -0.000671574, -0.000708702, -0.000522532, -0.000148181, 0.000343034, 0.000856598, 0.00129238, 0.00156352, 0.00161307, 0.00142518, 0.00102871, 0.00049235, -8.77927e-005, -0.00060604, -0.000967015, -0.00110385, -0.000991267, -0.000650943, -0.000148083, 0.000420316, 0.000943386, 0.00131719, 0.00146451, 0.00134986, 0.000986825, 0.000436164, -0.000204984, -0.000820989, -0.00129936, -0.00155212, -0.00153281, -0.00124589, -0.000746692, -0.000131635, 0.000479409, 0.000965486, 0.00122746, 0.00120712, 0.000898839, 0.000351395, -0.000340417, -0.00105307, -0.00165727, -0.00204237, -0.00213763, -0.00192619, -0.00144916, -0.000798647, -0.000101141, 0.00050595, 0.000900162, 0.000997422, 0.000768576, 0.000245783, -0.000482617, -0.00128795, -0.00202497, -0.00255909, -0.00279211, -0.00268134, -0.00224867, -0.00157741, -0.000797495, -6.16514e-005, 0.000483212, 0.000723933, 0.000603111, 0.000130911, -0.000615735, -0.00150659, -0.00238192, -0.00308225, -0.00347862, -0.00349756, -0.00313594, -0.0024628, -0.00160749, -0.000736202, -2.11028e-005, 0.000392219, 0.000412819, 2.26125e-005, -0.000718894, -0.0016845, -0.0027022, -0.003587, -0.00417578, -0.00435857, -0.00410045, -0.00344952, -0.00252933, -0.00151689, -0.000610053, 9.57936e-006, 0.000211429, -5.83132e-005, -0.000764994, -0.00179035, -0.0029533, -0.00404307, -0.00485857, -0.00524674, -0.00513258, -0.00453492, -0.00356477, -0.00240616, -0.00128273, -0.000416115, 1.61684e-005, -8.46884e-005, -0.000718337, -0.00178321, -0.00309361, -0.00441312, -0.00549832, -0.00614488, -0.00622718, -0.00572393, -0.00472459, -0.00341494, -0.00204399, -0.000878262, -0.00015154, -1.97517e-005, -0.000529478, -0.00160646, -0.00306677, -0.00464896, -0.00606185, -0.00703899, -0.00738993, -0.00703832, -0.00603936, -0.00457279, -0.00291204, -0.00137483, -0.000264039, 0.000190251, -0.000123549, -0.00117401, -0.00278857, -0.00468227, -0.00650862, -0.00792354, -0.00865085, -0.00853675, -0.00758277, -0.00595035, -0.00393516, -0.00191522, -0.000281788, 0.000634548, 0.000628697, -0.000335742, -0.00211378, -0.00440024, -0.00678206, -0.00881289, -0.0100966, -0.0103644, -0.00953084, -0.00771676, -0.00523476, -0.00253731, -0.000136558, 0.00149042, 0.00199366, 0.00122221, -0.000738516, -0.00357233, -0.00678172, -0.00977373, -0.0119678, -0.0129064, -0.012348, -0.0103236, -0.0071455, -0.00336299, 0.000328288, 0.00320964, 0.00467371, 0.00434579, 0.00216881, -0.00156585, -0.00625041, -0.0110537, -0.0150616, -0.0174423, -0.017608, -0.0153435, -0.0108755, -0.00486763, 0.0016651, 0.00751117, 0.0114663, 0.0125529, 0.0102197, 0.00448544, -0.00400155, -0.0140033, -0.0238323, -0.0315761, -0.0353754, -0.0337149, -0.0256832, -0.0111587, 0.00910963, 0.0335445, 0.0599032, 0.0855432, 0.107753, 0.124103, 0.132767, 0.132767, 0.124103, 0.107753, 0.0855432, 0.0599032, 0.0335445, 0.00910963, -0.0111587, -0.0256832, -0.0337149, -0.0353754, -0.0315761, -0.0238323, -0.0140033, -0.00400155, 0.00448544, 0.0102197, 0.0125529, 0.0114663, 0.00751117, 0.0016651, -0.00486763, -0.0108755, -0.0153435, -0.017608, -0.0174423, -0.0150616, -0.0110537, -0.00625041, -0.00156585, 0.00216881, 0.00434579, 0.00467371, 0.00320964, 0.000328288, -0.00336299, -0.0071455, -0.0103236, -0.012348, -0.0129064, -0.0119678, -0.00977373, -0.00678172, -0.00357233, -0.000738516, 0.00122221, 0.00199366, 0.00149042, -0.000136558, -0.00253731, -0.00523476, -0.00771676, -0.00953084, -0.0103644, -0.0100966, -0.00881289, -0.00678206, -0.00440024, -0.00211378, -0.000335742, 0.000628697, 0.000634548, -0.000281788, -0.00191522, -0.00393516, -0.00595035, -0.00758277, -0.00853675, -0.00865085, -0.00792354, -0.00650862, -0.00468227, -0.00278857, -0.00117401, -0.000123549, 0.000190251, -0.000264039, -0.00137483, -0.00291204, -0.00457279, -0.00603936, -0.00703832, -0.00738993, -0.00703899, -0.00606185, -0.00464896, -0.00306677, -0.00160646, -0.000529478, -1.97517e-005, -0.00015154, -0.000878262, -0.00204399, -0.00341494, -0.00472459, -0.00572393, -0.00622718, -0.00614488, -0.00549832, -0.00441312, -0.00309361, -0.00178321, -0.000718337, -8.46884e-005, 1.61684e-005, -0.000416115, -0.00128273, -0.00240616, -0.00356477, -0.00453492, -0.00513258, -0.00524674, -0.00485857, -0.00404307, -0.0029533, -0.00179035, -0.000764994, -5.83132e-005, 0.000211429, 9.57936e-006, -0.000610053, -0.00151689, -0.00252933, -0.00344952, -0.00410045, -0.00435857, -0.00417578, -0.003587, -0.0027022, -0.0016845, -0.000718894, 2.26125e-005, 0.000412819, 0.000392219, -2.11028e-005, -0.000736202, -0.00160749, -0.0024628, -0.00313594, -0.00349756, -0.00347862, -0.00308225, -0.00238192, -0.00150659, -0.000615735, 0.000130911, 0.000603111, 0.000723933, 0.000483212, -6.16514e-005, -0.000797495, -0.00157741, -0.00224867, -0.00268134, -0.00279211, -0.00255909, -0.00202497, -0.00128795, -0.000482617, 0.000245783, 0.000768576, 0.000997422, 0.000900162, 0.00050595, -0.000101141, -0.000798647, -0.00144916, -0.00192619, -0.00213763, -0.00204237, -0.00165727, -0.00105307, -0.000340417, 0.000351395, 0.000898839, 0.00120712, 0.00122746, 0.000965486, 0.000479409, -0.000131635, -0.000746692, -0.00124589, -0.00153281, -0.00155212, -0.00129936, -0.000820989, -0.000204984, 0.000436164, 0.000986825, 0.00134986, 0.00146451, 0.00131719, 0.000943386, 0.000420316, -0.000148083, -0.000650943, -0.000991267, -0.00110385, -0.000967015, -0.00060604, -8.77927e-005, 0.00049235, 0.00102871, 0.00142518, 0.00161307, 0.00156352, 0.00129238, 0.000856598, 0.000343034, -0.000148181, -0.000522532, -0.000708702, -0.000671574, -0.000418298, 3.62071e-006, 0.000515746, 0.00102379, 0.00143542, 0.00167754, 0.0017096, 0.00153082, 0.00117974, 0.000726518, 0.000259388, -0.00013207, -0.000373677, -0.00042032, -0.000263979, 6.52581e-005, 0.000505335, 0.000974243, 0.00138561, 0.00166492, 0.00176322, 0.00166602, 0.00139545, 0.00100571, 0.000572476, 0.000178509, -0.000101932, -0.000216838, -0.00014588, 9.62077e-005, 0.000462848, 0.000884737, 0.0012831, 0.00158452, 0.00173462, 0.00170795, 0.00151237, 0.00118714, 0.000795207, 0.000411086, 0.00010682, -6.1467e-005, -6.38453e-005, 9.81658e-005, 0.000392294, 0.000761941, 0.00113708, 0.00144752, 0.00163602, 0.00166882, 0.00154165, 0.00128014, 0.000934656, 0.000570564, 0.00025581, 4.81987e-005, -1.52766e-005, 7.4917e-005, 0.000299429, 0.000614013, 0.000958118, 0.00126642, 0.00148108, 0.00156247, 0.00149635, 0.00129618, 0.00100027, 0.00066429, 0.00035065, 0.000116746, 4.30244e-006, 3.17723e-005, 0.000191193, 0.000450011, 0.000757485, 0.0010544, 0.00128426, 0.00140377, 0.00139082, 0.00124828, 0.00100319, 0.00070138, 0.000398668, 0.000150293, 6.10989e-007, -2.50615e-005, 7.50725e-005, 0.000279254, 0.000546539, 0.000824699, 0.00106012, 0.00120786, 0.0012399, 0.0011502, 0.000955528, 0.000692034, 0.000408249, 0.000155858, -2.00001e-005, -8.9082e-005, -4.14968e-005, 0.000110706, 0.000336072, 0.000589873, 0.000822634, 0.000989438, 0.00105827, 0.00101581, 0.000869724, 0.000646913, 0.00038827, 0.000140848, -5.10093e-005, -0.000153917, -0.000151542, -4.74403e-005, 0.000135874, 0.000361376, 0.000584639, 0.000762228, 0.000859809, 0.000858439, 0.000757911, 0.000576547, 0.000347537, 0.000112541, -8.61971e-005, -0.000213757, -0.000248961, -0.000188159, -4.56758e-005, 0.000149098, 0.000357396, 0.000538437, 0.000657073, 0.000690282, 0.000631311, 0.00049072, 0.000294191, 7.75236e-005, -0.000120177, -0.000263853, -0.000328986, -0.00030604, -0.000202042, -3.90546e-005, 0.000150146, 0.000328333, 0.000460843, 0.000522013, 0.00049986, 0.000398134, 0.000235414, 4.14363e-005, -0.000148601, -0.000300689, -0.00038834, -0.000397436, -0.000328699, -0.000197361, -3.01209e-005, 0.000139988, 0.000279859, 0.000362489, 0.000371946, 0.00030619, 0.000177274, 8.89802e-006, -0.000168166, -0.000321922, -0.000425132, -0.000460348, -0.00042303, -0.000322222, -0.000178681, -2.08409e-005, 0.0001206, 0.000218438, 0.000254004, 0.000220521, 0.000124221, -1.70044e-005, -0.000177099, -0.000326819, -0.000439235, -0.000494727, -0.00048455, -0.000412314, -0.000293143, -0.000150695, -1.26253e-005, 9.46269e-005, 0.000150761, 0.000145314, 7.94852e-005, -3.42554e-005, -0.000174646, -0.000315725, -0.000431742, -0.000501958, -0.000514452, -0.000468217, -0.000373201, -0.000248296, -0.000117687, -6.26755e-006, 6.50194e-005, 8.30299e-005, 4.47671e-005, -4.22068e-005, -0.000161325, -0.00029024, -0.000405069, -0.000484876, -0.000515536, -0.000492273, -0.000420421, -0.000314283, -0.000194338, -8.33331e-005, -2.00397e-006, 3.476e-005, 2.06143e-005, -4.11835e-005, -0.000138515, -0.000252792, -0.000362512, -0.00044732, -0.000491778, -0.000488183, -0.000437887, -0.000350918, -0.000243982, -0.000137252, -5.05569e-005, 3.14683e-007, 6.49801e-006, -3.23965e-005, -0.000108331, -0.000206467, -0.000308027, -0.000393857, -0.000448004, -0.000460642, -0.000429816, -0.000361692, -0.000269284, -0.000169932, -8.20023e-005, -2.14481e-005, 1.12795e-006, -1.76307e-005, -7.33132e-005, -0.000154683, -0.000245872, -0.000329409, -0.0003895, -0.000414949, -0.000401173, -0.000350962, -0.000273844, -0.00018421, -9.85592e-005, -3.23911e-005, 2.66794e-006, 9.69588e-007, -3.61902e-005, -0.000100923, -0.000180315, -0.000258912, -0.000321638, -0.000356598, -0.000357248, -0.000323529, -0.000261781, -0.000183465, -0.000102946, -3.4773e-005, 9.03285e-006, 2.11779e-005, 3.84367e-007, -4.847e-005, -0.000115352, -0.000187025, -0.000249565, -0.000290963, -0.000303332, -0.000284316, -0.000237434, -0.000171342, -9.81303e-005, -3.10277e-005, 1.80877e-005, 4.08731e-005, 3.40224e-005, -2.02569e-007, -5.44776e-005, -0.000117865, -0.000177905, -0.00022296, -0.00024437, -0.000238017, -0.000205015, -0.000151425, -8.70401e-005, -2.35087e-005, 2.78686e-005, 5.82319e-005, 6.27754e-005, 4.15721e-005, -5.16373e-007, -5.48263e-005, -0.000110562, -0.000156846, -0.000184736, -0.000188869, -0.000168386, -0.00012703, -7.23673e-005, -1.43183e-005, 3.67285e-005, 7.18534e-005, 8.52448e-005, 7.52231e-005, 4.44893e-005, -4.5623e-007, -5.05813e-005, -9.60497e-005, -0.000128059, -0.000140465, -0.000130876, -0.000101036, -5.64281e-005, -5.19679e-006, 4.34192e-005, 8.08164e-005, 0.000100621, 9.98289e-005, 7.93145e-005, 4.35935e-005, -7.32446e-008, -4.30813e-005, -7.7101e-005, -9.56258e-005, -9.51446e-005, -7.57477e-005, -4.10422e-005, 2.57493e-006, 4.71589e-005, 8.47155e-005, 0.000108693, 0.000115169, 0.000103535, 7.65514e-005, 3.97756e-005, 4.75576e-007, -3.3743e-005, -5.63641e-005, -6.31438e-005, -5.2866e-005, -2.75062e-005, 8.1849e-006, 4.76207e-005, 8.36288e-005, 0.000109798, 0.000121652, 0.000117448, 9.84468e-005, 6.86295e-005, 3.39027e-005, 9.73824e-007, -2.39159e-005, -3.61344e-005, -3.34952e-005, -1.66124e-005, 1.12598e-005, 4.4885e-005, 7.80474e-005, 0.00010473, 0.00012022, 0.000121966, 0.000110005, 8.6912e-005, 5.72712e-005, 2.67911e-005, 1.21949e-006, -1.47159e-005, -1.8173e-005, -8.67905e-006, 1.182e-005, 3.9373e-005, 6.87878e-005, 9.46248e-005, 0.000112203, 0.000118461, 0.000112484, 9.56435e-005, 7.12873e-005, 4.40907e-005, 1.91559e-005, 1.06608e-006, -6.96111e-006, -3.63602e-006, 1.01948e-005, 3.17552e-005, 5.68836e-005, 8.08395e-005, 9.91849e-005, 0.000108609, 0.00010751, 9.62685e-005, 7.71245e-005, 5.37393e-005, 3.04769e-005, 1.15928e-005, 4.37806e-007, -1.13363e-006, 6.91467e-006, 2.28379e-005, 4.3464e-005, 6.48145e-005, 8.28529e-005, 9.42374e-005, 9.69198e-005, 9.05049e-005, 7.62808e-005, 5.69559e-005, 3.61189e-005, 1.75659e-005, 4.58573e-006, -6.30323e-007, 2.62296e-006, 1.34716e-005, 2.96503e-005, 4.79588e-005, 6.48642e-005, 7.717e-005, 8.2592e-005, 8.01683e-005, 7.04019e-005, 5.51442e-005, 3.72159e-005, 1.98742e-005, 6.19224e-006, -1.49557e-006, -2.01663e-006, 4.45612e-006, 1.64567e-005, 3.15347e-005, 4.67198e-005, 5.909e-005, 6.63021e-005, 6.70202e-005, 6.11308e-005, 4.97467e-005, 3.49652e-005, 1.94678e-005, 6.00458e-006, -3.10594e-006, -6.40492e-006, -3.53278e-006, 4.71979e-006, 1.65924e-005, 2.96921e-005, 4.14591e-005, 4.96323e-005, 5.26694e-005, 5.00052e-005, 4.21438e-005, 3.05309e-005, 1.72752e-005, 4.73717e-006, -4.90528e-006, -1.00595e-005, -9.99363e-006, -4.95352e-006, 3.90543e-006, 1.47523e-005, 2.54347e-005, 3.38794e-005, 3.84782e-005, 3.83633e-005, 3.35635e-005, 2.49626e-005, 1.41304e-005, 3.00708e-006, -6.45513e-006, -1.26565e-005, -1.46308e-005, -1.22158e-005, -6.05197e-006, 2.54065e-006, 1.18337e-005, 2.0009e-005, 2.55019e-005, 2.72755e-005, 2.50086e-005, 1.91249e-005, 1.07099e-005, 1.28564e-006, -7.4721e-006, -1.40532e-005, -1.73759e-005, -1.69876e-005, -1.31219e-005, -6.64762e-006, 1.11452e-006, 8.6351e-006, 1.44731e-005, 1.7528e-005, 1.72422e-005, 1.36818e-005, 7.51938e-006, -1.14641e-007, -7.84149e-006, -1.43005e-005, -1.83896e-005, -1.94714e-005, -1.74698e-005, -1.28783e-005, -6.64781e-006, -1.0838e-008, 5.7594e-006, 9.57672e-006, 1.07425e-005, 9.05891e-006, 4.85831e-006, -1.07223e-006, -7.64475e-006, -1.36758e-005, -1.81088e-005, -2.01973e-005, -1.96448e-005, -1.66396e-005, -1.18172e-005, -6.13413e-006, -6.74246e-007, 3.52274e-006, 5.6938e-006, 5.43558e-006, 2.81844e-006, -1.66692e-006, -7.19505e-006, -1.27624e-005, -1.73684e-005, -2.02172e-005, -2.08285e-005, -1.91487e-005, -1.55398e-005, -1.07136e-005, -5.58725e-006, -1.13924e-006, 1.79321e-006, 2.64747e-006, 1.2436e-006, -2.2016e-006, -7.09398e-006, -1.25895e-005, -1.7733e-005, -2.16414e-005, -2.36397e-005, -2.33991e-005, -2.09809e-005, -1.68421e-005, -1.17392e-005, -6.61851e-006, -2.44412e-006, -5.3163e-008, 2.02733e-009, -2.46927e-006, -7.24789e-006, -1.3753e-005, -2.11126e-005, -2.83084e-005, -3.43111e-005, -3.82459e-005, -3.94992e-005, -3.78129e-005, -3.32933e-005, -2.63995e-005, -1.78524e-005, -8.54376e-006, 6.05115e-007, 8.74823e-006, 1.52313e-005, 1.96412e-005, 2.18475e-005, 2.19722e-005, 2.03605e-005, 1.74808e-005, 1.39599e-005, 9.70961e-006, 9.91977e-006, 1.14188e-006 };

        //hold the filtered data
        private double filtered;

        //hold the raw data in a continuously updating buffer
        private double[] eegBuffer;
        private double[] tempeegBuffer;

        //counter to track when we should plot
        private int bufferCounter_raw;

        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main() {
            Application.Run(new Launcher());
        }
        
        public Launcher() {
            mainForm = new MainForm();
            tgHRV = new TGHrv();

            connector = new Connector();
            connector.DeviceConnected += new EventHandler(OnDeviceConnected);
            connector.DeviceFound += new EventHandler(OnDeviceFound);
            connector.DeviceNotFound += new EventHandler(OnDeviceNotFound);
            connector.DeviceConnectFail += new EventHandler(OnDeviceNotFound);
            connector.DeviceDisconnected += new EventHandler(OnDeviceDisconnected);
            connector.DeviceValidating += new EventHandler(OnDeviceValidating);

            mainForm.ConnectButtonClicked += new EventHandler(OnConnectButtonClicked);
            mainForm.DisconnectButtonClicked += new EventHandler(OnDisconnectButtonClicked);
            mainForm.Disposed += new EventHandler(OnMainFormDisposed);

            InitializeComponent();

            this.MaximumSize = new Size(391, 361);
            this.MinimumSize = this.MaximumSize;

            rawCounter = 0;     //initially zero
            delay = 512 * 5;    //5 seconds delay


            //hold the raw data in a continuously updating buffer
            eegBuffer = new double[bufferSize_hp];
            tempeegBuffer = new double[bufferSize_hp];

            //counter to track when we should plot
            bufferCounter_raw = 0;
 
        }

        private void button1_Click(object sender, EventArgs e) {
            //UpdateConnectButton(true);
            //UpdateStatusLabel("Searching for MindSet...");

            //mainForm.updateConnectButton(true);
            //mainForm.updateStatusLabel("Searching for MindSet...");

            //Comment this line out if you want the splash screen to wait for good connection.
            UpdateVisibility(false);

            //connector.RefreshAvailableConnections();

        }

        void OnDeviceNotFound(object sender, EventArgs e) {
            UpdateConnectButton(false);
            mainForm.updateConnectButton(false);
            mainForm.updateStatusLabel("Unable to connect.");
        }

        void OnDeviceFound(object sender, EventArgs e) {
            Connector.PortEventArgs de = (Connector.PortEventArgs)e;

            string tempPortName = de.PortName;
            mainForm.updateStatusLabel("Device found on " + tempPortName + ". Connecting...");

            connector.Connect(tempPortName);

        }

        void OnDeviceValidating(object sender, EventArgs e) {
            Connector.ConnectionEventArgs ce = (Connector.ConnectionEventArgs)e;

            mainForm.updateStatusLabel("Validating " + ce.Connection.PortName + ".");
        }

        void OnDeviceConnected(object sender, EventArgs e) {
            Connector.DeviceEventArgs de = (Connector.DeviceEventArgs)e;

            //save the device
            device = de.Device;

            mainForm.updateStatusLabel("Connected to a device on " + de.Device.PortName + ".");

            de.Device.DataReceived += new EventHandler(OnDataReceived);
            mainForm.updateConnectButton(true);

            UpdateVisibility(false);
            Console.WriteLine("Done");
        }

        void OnDeviceDisconnected(object sender, EventArgs e) {
            Connector.DeviceEventArgs de = (Connector.DeviceEventArgs)e;

            mainForm.updateStatusLabel("Disconnected from a device on " + de.Device.PortName + ".");

            mainForm.updateConnectButton(false);

        }


        void OnDataReceived(object sender, EventArgs e) {
            Device d = (Device)sender;
            Device.DataEventArgs de = (Device.DataEventArgs)e;

            ThinkGear.DataRow[] tempDataRowArray = de.DataRowArray;

            TGParser thinkGearParser = new TGParser();
            thinkGearParser.Read(de.DataRowArray);

            // Pass off data for recording
            if(mainForm.recordFlag == true) {
                //save the datalog.txt
                mainForm.recordData(de.DataRowArray);
            }


            /* Loop through new parsed data */
            for(int i = 0; i < thinkGearParser.ParsedData.Length; i++) {
                //send the configuration bytes to the chip. this happens immediately and only once
                if(thinkGearParser.ParsedData[i].ContainsKey("BMDConfig")) {
                    if(bytesToSend == null) {
                        bytesToSend = new byte[8] { 0xAA, 0xAA, 0x04, 0x03, 0x00, 0xF9, 0x00, (byte)thinkGearParser.ParsedData[i]["BMDConfig"] };
                        connector.Send(device.PortName, bytesToSend);
                    }
                }

                //save the poorsignal value. this is always updated
                if(thinkGearParser.ParsedData[i].ContainsKey("PoorSignal")) {
                    mainForm.poorQuality = thinkGearParser.ParsedData[i]["PoorSignal"];
                }


                if(thinkGearParser.ParsedData[i].ContainsKey("Raw")) {
                    
                    //if signal is good
                    if(mainForm.poorQuality == 200) {
                        rawCounter++;

                        //pass the data off for peak detection
                        tgHRVresult = tgHRV.AddData((short)thinkGearParser.ParsedData[i]["Raw"]);

                        //update the label
                        if((tgHRVresult > 150) && (tgHRVresult < 800) &&((rawCounter >= delay) && (bufferCounter_raw >= bufferSize_hp))) {
                            tgHRVresultInMS = (int)(tgHRVresult*1000.0/512.0);
                            mainForm.updateHRVLabel(tgHRVresultInMS.ToString());
                        }

                        //play the the beep if necessary
                        mainForm.playBeep(tgHRVresult, (rawCounter >= delay) && (bufferCounter_raw >= bufferSize_hp));

                        //calulate the fatigue level
                        mainForm.calculateFatigue(tgHRVresult);
                    
                        //update the buffer with the latest eeg value
                        Array.Copy(eegBuffer, 1, tempeegBuffer, 0, bufferSize_hp - 1);
                        tempeegBuffer[bufferSize_hp - 1] = (double)thinkGearParser.ParsedData[i]["Raw"];
                        Array.Copy(tempeegBuffer, eegBuffer, bufferSize_hp);
                        bufferCounter_raw++;

                        //if the eeg buffer is full, and "delay" seconds have already passed
                        if((rawCounter >= delay) && (bufferCounter_raw >= bufferSize_hp)) {

                            //filter the data and update the lp buffer
                            filtered = applyFilter(eegBuffer, hp_coeff);
                            mainForm.rawGraphPanel.LineGraph.Add(new DataPair((mainForm.rawGraphPanel.LineGraph.timeStampIndex / (double)mainForm.rawGraphPanel.LineGraph.samplingRate), filtered));
                            mainForm.rawGraphPanel.LineGraph.timeStampIndex++;

                            //clear the graph when it's full
                            if(mainForm.rawGraphPanel.LineGraph.timeStampIndex >= mainForm.rawGraphPanel.LineGraph.numberOfPoints) {
                                mainForm.rawGraphPanel.LineGraph.Clear();
                            }

                        } else {
                            //raw buffer is not full yet. plot zero
                            mainForm.rawGraphPanel.LineGraph.Add(new DataPair((mainForm.rawGraphPanel.LineGraph.timeStampIndex / (double)mainForm.rawGraphPanel.LineGraph.samplingRate), 0));
                            mainForm.rawGraphPanel.LineGraph.timeStampIndex++;
                        }

                    } else {
                        //otherwise signal is bad, plot zero. reset counter. reset HRV
                        rawCounter = 0;
                        bufferCounter_raw = 0;

                        Array.Clear(eegBuffer, 0, eegBuffer.Length);

                        mainForm.rawGraphPanel.LineGraph.Add(new DataPair((mainForm.rawGraphPanel.LineGraph.timeStampIndex / (double)mainForm.rawGraphPanel.LineGraph.samplingRate), 0));
                        mainForm.rawGraphPanel.LineGraph.timeStampIndex++;

                        mainForm.updateHRVLabel("0");

                        tgHRV.Reset();
                    }
                }


                if(thinkGearParser.ParsedData[i].ContainsKey("HeartRate")) {
                    //if the "delay" number of seconds have passed, pass the heartrate value
                    if(rawCounter >= delay) {
                        mainForm.ASICHBValue = thinkGearParser.ParsedData[i]["HeartRate"];
                        mainForm.updateAverageHeartBeatValue(thinkGearParser.ParsedData[i]["HeartRate"]);
                        mainForm.updateRealTimeHeartBeatValue(thinkGearParser.ParsedData[i]["HeartRate"]);
                    }
                        //otherwise just pass a value of 0 to make it think its poor signal
                    else {
                        mainForm.updateAverageHeartBeatValue(0);
                        mainForm.updateRealTimeHeartBeatValue(0);

                        //but still pass the correct heartbeat value for ecglog.txt
                        mainForm.ASICHBValue = thinkGearParser.ParsedData[i]["HeartRate"];
                    }
                }

                /* End "Check for the data flag for each panel..." */
            }
        }





        void OnConnectButtonClicked(object sender, EventArgs e) {
            string portName = mainForm.portText.Text.ToUpper();
            portName = portName.Trim();

            if(portName == "AUTO") {
                connector.RefreshAvailableConnections();
                mainForm.updateStatusLabel("Searching for MindSet...");
                return;
            }

            int portNumber = 0;

            try {
                portNumber = Convert.ToInt16(portName);
            } catch(FormatException fe) {
                Console.WriteLine(fe.Message);
            }

            if(portNumber > 0) {
                portName = "COM" + portNumber;
            }

            Regex r = new Regex("COM[1-9][0-9]*");
            portName = r.Match(portName).ToString();
            Console.WriteLine("Connecting to xx" + portName + "xx");

            if(portName != "") {
                connector.Connect(portName);
                mainForm.updateStatusLabel("Connecting to " + portName);
                return;
            }

            MessageBox.Show("You must enter a valid COM port name. (Ex. COM1 or 1)\nYou may also type in 'Auto' for auto-connection.", "Invalid Input Error",
                            MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            //mainForm.updateConnectButton(false);
            mainForm.updateConnectButton(false);
            return;

        }

        void OnDisconnectButtonClicked(object sender, EventArgs e) {
            connector.Disconnect();
            mainForm.updateConnectButton(false);

            //make the byteToSend null so it will be resent when pressing connect
            bytesToSend = null;
        }



        delegate void UpdateVisibilityDelegate(bool enable);
        public void UpdateVisibility(bool enable) {
            if(this.InvokeRequired) {
                UpdateVisibilityDelegate del = new UpdateVisibilityDelegate(UpdateVisibility);
                this.Invoke(del, new object[] { enable });
            } else {
                if(enable) {
                    if(!this.Visible) {
                        this.Show();
                        mainForm.Hide();
                    }
                } else {
                    if(this.Visible) {
                        this.Hide();
                        mainForm.Show();
                    }
                }
            }
        }


        delegate void UpdateConnectButtonDelegate(bool connected);
        public void UpdateConnectButton(bool connected) {
            if(this.InvokeRequired) {
                UpdateConnectButtonDelegate del = new UpdateConnectButtonDelegate(UpdateConnectButton);
                this.Invoke(del, new object[] { connected });
            } else {
                if(connected) {
                    this.button1.Enabled = false;
                } else {

                    this.button1.Enabled = true;
                }

            }
        }

        void OnMainFormDisposed(object sender, EventArgs e) {
            this.Dispose();
        }

        private void Launcher_Load(object sender, EventArgs e) {

        }


        //apply filter based on multiply add technique
        private double applyFilter(double[] data, double[] coeffs) {
            int length = data.Length;
            double result = new double();

            for(int i = 0; i < length; i++) {
                result += data[i] * coeffs[i];
            }
            return result;
        }
    }
}
